{"version":3,"sources":["../src/barchart-result-lazy.js"],"names":["define","$","Log","Result","Chart","BarChartResult","call","_initialized","_chartType","_options","scales","yAxes","ticks","beginAtZero","prototype","Object","create","initChart","options","ctx","document","getElementById","getContext","labels","votes","each","optionid","label","push","_chart","type","data","datasets","backgroundColor","debug","performUpdate","callback","self","update"],"mappings":"AAsBAA,OAAM,qCAAC,CAAC,QAAD,CAAW,UAAX,CAAuB,qBAAvB,CAA8C,mBAA9C,CAAD,CACF,SAASC,CAAT,CAAYC,CAAZ,CAAiBC,CAAjB,CAAyBC,CAAzB,CAAgC,CAO5B,QAASC,CAAAA,CAAT,EAA0B,CACtBF,CAAM,CAACG,IAAP,CAAY,IAAZ,EACA,KAAKC,YAAL,IACA,KAAKC,UAAL,CAAkB,KAAlB,CACA,KAAKC,QAAL,CAAgB,CACZC,MAAM,CAAE,CACJC,KAAK,CAAE,CAAC,CACJC,KAAK,CAAE,CACHC,WAAW,GADR,CADH,CAAD,CADH,CADI,CAAhB,CASA,MAAQ,KACX,CAGDR,CAAc,CAACS,SAAf,CAA2BC,MAAM,CAACC,MAAP,CAAcb,CAAM,CAACW,SAArB,CAA3B,CAMAT,CAAc,CAACS,SAAf,CAAyBG,SAAzB,CAAqC,SAASC,CAAT,CAAkB,IAC/CC,CAAAA,CAAG,CAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,UAA1C,CAAqD,IAArD,CADyC,CAG/CC,CAAM,CAAG,EAHsC,CAGlCC,CAAK,CAAG,EAH0B,CAInDvB,CAAC,CAACwB,IAAF,CAAOP,CAAP,CAAgB,SAASQ,CAAT,CAAmBC,CAAnB,CAA0B,CACtCJ,CAAM,CAACK,IAAP,CAAYD,CAAZ,EACAH,CAAK,CAACI,IAAN,CAAW,CAAX,CACH,CAHD,EAKA,KAAKC,MAAL,CAAc,GAAIzB,CAAAA,CAAJ,CAAUe,CAAV,CAAe,CACzBW,IAAI,CAAE,KAAKtB,UADc,CAEzBuB,IAAI,CAAE,CACFR,MAAM,CAAEA,CADN,CAEFS,QAAQ,CAAE,CAAC,CACPL,KAAK,CAAE,OADA,CAEPI,IAAI,CAAEP,CAFC,CAGPS,eAAe,CAAE,CACb,SADa,CAEb,SAFa,CAGb,SAHa,CAIb,SAJa,CAHV,CAAD,CAFR,CAFmB,CAezBf,OAAO,CAAE,KAAKT,QAfW,CAAf,CAAd,CAkBAP,CAAG,CAACgC,KAAJ,CAAU,KAAK1B,UAAL,CAAkB,eAA5B,CACH,CA5BD,CAiCAH,CAAc,CAACS,SAAf,CAAyBqB,aAAzB,CAAyC,SAASjB,CAAT,CAAkBM,CAAlB,CAAyBY,CAAzB,CAAmC,CACxE,GAAIC,CAAAA,CAAI,CAAG,IAAX,CACA,GAAI,CAACA,CAAI,CAAC9B,YAAV,CAAwB,CACpB8B,CAAI,CAACpB,SAAL,CAAeC,CAAf,EACAmB,CAAI,CAAC9B,YAAL,GACH,CAED8B,CAAI,CAACR,MAAL,CAAYE,IAAZ,CAAiBC,QAAjB,CAA0B,CAA1B,EAA6BD,IAA7B,CAAoC,EAApC,CACA9B,CAAC,CAACwB,IAAF,CAAOP,CAAP,CAAgB,SAASQ,CAAT,CAAmB,CAC/BW,CAAI,CAACR,MAAL,CAAYE,IAAZ,CAAiBC,QAAjB,CAA0B,CAA1B,EAA6BD,IAA7B,CAAkCH,IAAlC,CAAuCJ,CAAK,CAACE,CAAD,CAA5C,CACH,CAFD,EAGAW,CAAI,CAACR,MAAL,CAAYS,MAAZ,GACAF,CAAQ,EACX,CAbD,CAeA,MAAQ/B,CAAAA,CACX,CAhFC,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Live poll barchart result for poll rendering.\n *\n * @package mod_livepoll\n * @copyright Copyright (c) 2018 Open LMS\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\"jquery\", \"core/log\", \"mod_livepoll/result\", \"core/chartjs-lazy\"],\n    function($, Log, Result, Chart) {\n\n        /**\n         * Text result constructor.\n         * @returns {BarChartResult}\n         * @constructor\n         */\n        function BarChartResult() {\n            Result.call(this);\n            this._initialized = false;\n            this._chartType = \"bar\";\n            this._options = {\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            beginAtZero: true\n                        }\n                    }],\n                }\n            };\n            return (this);\n        }\n\n        // Prototype extension.\n        BarChartResult.prototype = Object.create(Result.prototype);\n\n        /**\n         * Initializes the Char.JS element.\n         * @param options\n         */\n        BarChartResult.prototype.initChart = function(options) {\n            var ctx = document.getElementById(\"livepoll-chart\").getContext(\"2d\");\n\n            var labels = [], votes = [];\n            $.each(options, function(optionid, label) {\n                labels.push(label);\n                votes.push(0);\n            });\n\n            this._chart = new Chart(ctx, {\n                type: this._chartType,\n                data: {\n                    labels: labels,\n                    datasets: [{\n                        label: \"Votes\",\n                        data: votes,\n                        backgroundColor: [\n                            \"#ff6384\",\n                            \"#36a2eb\",\n                            \"#cc65fe\",\n                            \"#ffce56\",\n                        ],\n                    }]\n                },\n                options: this._options\n            });\n\n            Log.debug(this._chartType + \" initialized!\");\n        };\n\n        /**\n         * {@inheritdoc}\n         */\n        BarChartResult.prototype.performUpdate = function(options, votes, callback) {\n            var self = this;\n            if (!self._initialized) {\n                self.initChart(options);\n                self._initialized = true;\n            }\n\n            self._chart.data.datasets[0].data = [];\n            $.each(options, function(optionid) {\n                self._chart.data.datasets[0].data.push(votes[optionid]);\n            });\n            self._chart.update();\n            callback();\n        };\n\n        return (BarChartResult);\n    }\n);"],"file":"barchart-result-lazy.min.js"}