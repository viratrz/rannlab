{"version":3,"sources":["../src/result.js"],"names":["define","$","Log","Result","prototype","update","options","votes","dfd","Deferred","performUpdate","resolve","promise","callback","debug","each","optionid"],"mappings":"AAsBAA,OAAM,uBAAC,CAAC,QAAD,CAAW,UAAX,CAAD,CACF,SAASC,CAAT,CAAYC,CAAZ,CAAiB,CAOb,QAASC,CAAAA,CAAT,EAAkB,CACd,MAAQ,KACX,CAQDA,CAAM,CAACC,SAAP,CAAiBC,MAAjB,CAA0B,SAASC,CAAT,CAAkBC,CAAlB,CAAyB,CAC/C,GAAIC,CAAAA,CAAG,CAAGP,CAAC,CAACQ,QAAF,EAAV,CACA,KAAKC,aAAL,CAAmBJ,CAAnB,CAA4BC,CAA5B,CAAmC,UAAW,CAC1CC,CAAG,CAACG,OAAJ,EACH,CAFD,EAGA,MAAOH,CAAAA,CAAG,CAACI,OAAJ,EACV,CAND,CAcAT,CAAM,CAACC,SAAP,CAAiBM,aAAjB,CAAiC,SAASJ,CAAT,CAAkBC,CAAlB,CAAyBM,CAAzB,CAAmC,CAChEX,CAAG,CAACY,KAAJ,CAAU,UAAV,EACAb,CAAC,CAACc,IAAF,CAAOT,CAAP,CAAgB,SAASU,CAAT,CAAmB,CAC/Bd,CAAG,CAACY,KAAJ,CAAUE,CAAQ,CAAG,KAAX,CAAmBT,CAAK,CAACS,CAAD,CAAlC,CACH,CAFD,EAGAH,CAAQ,EACX,CAND,CAQA,MAAQV,CAAAA,CACX,CAzCC,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Live dummy result handler. Not to be used but to be extended.\n *\n * @package mod_livepoll\n * @copyright Copyright (c) 2018 Open LMS\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\"jquery\", \"core/log\"],\n    function($, Log) {\n\n        /**\n         * Dummy result constructor.\n         * @returns {Result}\n         * @constructor\n         */\n        function Result() {\n            return (this);\n        }\n\n        /**\n         * Promises to update the UI for this result handler.\n         * Do not override!\n         * @param options\n         * @param votes\n         */\n        Result.prototype.update = function(options, votes) {\n            var dfd = $.Deferred();\n            this.performUpdate(options, votes, function() {\n                dfd.resolve();\n            });\n            return dfd.promise();\n        };\n\n        /**\n         * Updates the UI for this result handler and acknowledges using a callback.\n         * @param options\n         * @param votes\n         * @param callback\n         */\n        Result.prototype.performUpdate = function(options, votes, callback) {\n            Log.debug(\"Results:\");\n            $.each(options, function(optionid) {\n                Log.debug(optionid + \" : \" + votes[optionid]);\n            });\n            callback();\n        };\n\n        return (Result);\n    }\n);"],"file":"result.min.js"}