{"version":3,"file":"questionid_choice_updater.min.js","sources":["../src/questionid_choice_updater.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * The module provides autocomplete for the question idnumber form field.\n *\n * @module    filter_embedquestion/questionid_choice_updater\n * @package   filter_embedquestion\n * @copyright 2018 The Open University\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax'], function($, Ajax) {\n    var t = {\n        /**\n         * Initialise the handling.\n         */\n        init: function() {\n            $('select#id_categoryidnumber').on('change', t.categoryChanged);\n            t.lastCategory = null;\n        },\n\n        /**\n         * Used to track when the category really changes.\n         */\n        lastCategory: null,\n\n        /**\n         * Source of data for Ajax element.\n         */\n        categoryChanged: function() {\n            if ($('select#id_categoryidnumber').val() === t.lastCategory) {\n                return;\n            }\n\n            M.util.js_pending('filter_embedquestion-get_questions');\n            t.lastCategory = $('select#id_categoryidnumber').val();\n\n            if (t.lastCategory === '') {\n                t.updateChoices([]);\n            } else {\n                Ajax.call([{\n                    methodname: 'filter_embedquestion_get_sharable_question_choices',\n                    args: {courseid: $('input[name=courseid]').val(), categoryidnumber: t.lastCategory}\n                }])[0].done(t.updateChoices);\n            }\n        },\n\n        /**\n         * Update the contents of the Question select with the results of the AJAX call.\n         *\n         * @param {Array} response - array of options, each has fields value and label.\n         */\n        updateChoices: function(response) {\n            var select = $('select#id_questionidnumber');\n\n            select.empty();\n            $(response).each(function(index, option) {\n                select.append('<option value=\"' + option.value + '\">' + option.label + '</option>');\n            });\n            M.util.js_complete('filter_embedquestion-get_questions');\n        }\n    };\n    return t;\n});\n"],"names":["define","$","Ajax","t","init","on","categoryChanged","lastCategory","val","M","util","js_pending","updateChoices","call","methodname","args","courseid","categoryidnumber","done","response","select","empty","each","index","option","append","value","label","js_complete"],"mappings":";;;;;;;;AAuBAA,wDAAO,CAAC,SAAU,cAAc,SAASC,EAAGC,UACpCC,EAAI,CAIJC,KAAM,WACFH,EAAE,8BAA8BI,GAAG,SAAUF,EAAEG,iBAC/CH,EAAEI,aAAe,MAMrBA,aAAc,KAKdD,gBAAiB,WACTL,EAAE,8BAA8BO,QAAUL,EAAEI,eAIhDE,EAAEC,KAAKC,WAAW,sCAClBR,EAAEI,aAAeN,EAAE,8BAA8BO,MAE1B,KAAnBL,EAAEI,aACFJ,EAAES,cAAc,IAEhBV,KAAKW,KAAK,CAAC,CACPC,WAAY,qDACZC,KAAM,CAACC,SAAUf,EAAE,wBAAwBO,MAAOS,iBAAkBd,EAAEI,iBACtE,GAAGW,KAAKf,EAAES,iBAStBA,cAAe,SAASO,cAChBC,OAASnB,EAAE,8BAEfmB,OAAOC,QACPpB,EAAEkB,UAAUG,MAAK,SAASC,MAAOC,QAC7BJ,OAAOK,OAAO,kBAAoBD,OAAOE,MAAQ,KAAOF,OAAOG,MAAQ,gBAE3ElB,EAAEC,KAAKkB,YAAY,+CAGpBzB"}